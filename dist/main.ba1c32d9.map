{"version":3,"sources":["main.js"],"names":["html","document","querySelector","style","str1","str2","n","step","setTimeout","innerHTML","substring","window","scrollTo","length"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAIA,OAAOC,SAASC,aAAT,CAAuB,OAAvB,CAAX;AACA,IAAIC,QAAQF,SAASC,aAAT,CAAuB,QAAvB,CAAZ;AACA;AACA,IAAIE,gzCAAJ;;AAiDA,IAAIC,OAAO,EAAX;AACA,IAAIC,IAAI,CAAR;;AAEA,IAAIC,OAAO,SAAPA,IAAO,GAAM;AACfC,aAAW,YAAM;AACf,YAAQJ,KAAKE,CAAL,CAAR;AACE;AACA,WAAK,IAAL;AACED,gBAAQ,MAAR;AACA;AACF;AACA,WAAK,GAAL;AACEA,gBAAQ,OAAR;AACA;AACF;AACA;AACEA,gBAAQD,KAAKE,CAAL,CAAR;AACA;AAZJ;;AAeAN,SAAKS,SAAL,GAAiBJ,IAAjB;AACAF,UAAMM,SAAN,GAAkBL,KAAKM,SAAL,CAAe,CAAf,EAAkBJ,CAAlB,CAAlB;AACA;AACAK,WAAOC,QAAP,CAAgB,CAAhB,EAAmB,KAAnB;AACAZ,SAAKY,QAAL,CAAc,CAAd,EAAiB,KAAjB;AACAN;AACA,QAAIA,IAAIF,KAAKS,MAAb,EAAqB;AACnBN;AACD;AACF,GAzBD,EAyBG,CAzBH;AA0BD,CA3BD;;AA6BAA","file":"main.ba1c32d9.map","sourceRoot":"..\\src","sourcesContent":["let html = document.querySelector(\"#html\");\r\nlet style = document.querySelector(\"#style\");\r\n// 通过加注释，让汉字不会影响到CSS\r\nlet str1 = `\r\n/*\r\n * 你好，我叫叫小季\r\n * 接下来我要展示一下我的前端功底\r\n * 首先我要准备一个div\r\n */\r\n#div1 {\r\n  width: 200px;\r\n  height: 200px;\r\n}\r\n/*\r\n * 接下来，我要把div变成一个八卦图\r\n * 首先，把div变成一个圆\r\n */\r\n#div1 {\r\n  border-radius: 50%;\r\n  box-shadow: 0 0 3px rgba(0, 0, 0, 0.5);\r\n  border: none;\r\n}\r\n/*\r\n * 八卦是阴阳形成的\r\n * 一黑一白\r\n */\r\n#div1 {\r\n  background: linear-gradient(90deg,rgba(255, 255, 255, 1) 0%,rgba(255, 255, 255, 1) 50%,rgba(0, 0, 0, 1) 50%,rgba(0, 0, 0, 1) 100%);\r\n}\r\n/* \r\n * 加一对神秘的小球\r\n */\r\n#div1::before {\r\n  width: 100px;\r\n  height: 100px;\r\n  top: 0;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  background: radial-gradient(circle,rgba(255, 255, 255, 1) 15%,rgba(0, 0, 0, 1) 15%,rgba(0, 0, 0, 1) 100%);\r\n  border-radius: 50%;\r\n}\r\n#div1::after {\r\n  width: 100px;\r\n  height: 100px;\r\n  bottom: 0;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  background: radial-gradient(circle,rgba(0, 0, 0, 1) 15%,rgba(255, 255, 255, 1) 15%,rgba(255, 255, 255, 1) 100%);\r\n  border-radius: 50%;\r\n}\r\n`;\r\n\r\nlet str2 = \"\";\r\nlet n = 0;\r\n\r\nlet step = () => {\r\n  setTimeout(() => {\r\n    switch (str1[n]) {\r\n      // 如果是回车，就返回<br>\r\n      case \"\\n\":\r\n        str2 += \"<br>\";\r\n        break;\r\n      // 如果是空格，就返回&nbsp\r\n      case \" \":\r\n        str2 += \"&nbsp\";\r\n        break;\r\n      // 如果都不是，就原样返回\r\n      default:\r\n        str2 += str1[n];\r\n        break;\r\n    }\r\n\r\n    html.innerHTML = str2;\r\n    style.innerHTML = str1.substring(0, n);\r\n    // 每次写完html，都向下滚动到最底。\r\n    window.scrollTo(0, 99999);\r\n    html.scrollTo(0, 99999);\r\n    n++;\r\n    if (n < str1.length) {\r\n      step();\r\n    }\r\n  }, 0);\r\n};\r\n\r\nstep();\r\n"]}